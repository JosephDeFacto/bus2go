{% extends 'base.html.twig' %}

{% block title %}Bus2GO{% endblock %}

{% block body %}
    {% if form is defined %}
        {{ form_start(form) }}

        <span class="search__select-label-from"></span>
        {{ form_row(form.departFrom, {'label':false}) }}
        <span class="search__select-label-to"></span>
        {{ form_row(form.travelTo, {'label':false}) }}
        <span class="search__select-label-datefrom"></span>
        {{ form_row(form.departingOn, {'label':false}) }}
        <input type="submit" value="Search" class="btn btn--black__search">
        {{ form_end(form) }}
    {% endif %}

    {% for flash in app.flashes('success') %}
        <div class="alert alert-success">{{ flash }}</div>
    {% endfor %}
    {% for flash in app.flashes('error') %}
        <div class="alert alert-danger">{{ flash }}</div>
    {% endfor %}

    <script>

        let autosuggest = (inputSelector, minLength) => {
            let input = document.querySelector(inputSelector);
            input.addEventListener("keyup", () => {
                let searchTerm = input.value.trim();
                console.log(input);

                if (searchTerm.length >= minLength) {
                    fetch('{{ path('app_search') }}', {
                        //dataType: "json",
                        method: "POST",
                        body: JSON.stringify({ searchTerm: searchTerm}),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            const results = data;

                            const suggestions = document.createElement('ul');
                            suggestions.classList.add('suggestions');

                            for (let i = 0; i < results.length; i++) {
                                const suggestion = document.createElement('li');

                                suggestion.classList.add('suggestion');
                                suggestion.textContent = results[i];
                                suggestions.appendChild(suggestion);
                                if (i % 2 === 0) {
                                    suggestion.style.background = "#ccc";
                                }
                                suggestion.addEventListener('click', () => {
                                    input.value = suggestion.textContent;
                                })
                            }

                            const currentSuggestions = input.parentNode.querySelector('.suggestions');
                            if (currentSuggestions) {
                                input.parentNode.removeChild(currentSuggestions);
                            }

                            input.parentNode.appendChild(suggestions);
                        })
                        .catch(error => console.log(error));
                }

                let closeSuggestList = () => {
                    let suggestions = document.getElementsByClassName('suggestions');
                    for (let i = 0; i < suggestions.length; i++) {
                        suggestions[i].parentNode.removeChild(suggestions[i]);
                    }
                }

                document.addEventListener('click', (e) => {
                    closeSuggestList(e.target);
                })
            })
        };

        autosuggest(".search__select--from", 3);
        autosuggest(".search__select--to", 3);


        $(document).ready(function() {
            $(".js-datepicker").datepicker({
                dateFormat: 'dd-mm-yy',
                beforeShowDay: $.datepicker.noWeekends
            });


            /*
            $(".search__select--from").on("keyup", function() {
                let departFrom = $(".search__select--from").val();

                $.ajax({
                    url: "",
                    dataType: "json",
                    type: "POST",
                    data: {departFrom: departFrom},
                    //data: $(this).serialize(),
                    success: function(data) {
                        console.log(data)

                    },
                    error: function(jqXHR, textStatus) {
                        console.error(textStatus);
                    }
                });
            });
            */
            /*
            $(".search__select--to").on("keyup", function() {
                let searchDepartFrom = $(this).val();

                if (searchDepartFrom.length < 3) {
                    $(".search__select--to").next('.search-results').remove();
                    return;
                }


                $.ajax({
                    url: "",
                    dataType: "json",
                    type: "POST",
                    data: {departFrom: searchDepartFrom},
                    //data: $(this).serialize(),
                    success: function(data) {
                        let table = $('<table>');
                        $.each(data, function(index, item) {
                            let row = $('<tr>').append(
                                //$('<td>').text(item.name),
                                $('<td>').text(item),
                            );
                            table.append(row);
                        })
                        let container = $('<div>').addClass('search-results').html(table);
                        $(".search__select--to").next('.search-results').remove();
                        $(".search__select--to").after(container);

                        //$("#ajax--search-results").html(data);
                        //$("#ajax--search-results").fadeIn();
                    },
                    error: function(jqXHR, textStatus) {
                        console.error(textStatus);
                    }
                });
            });
            */


            setTimeout(() => {
                let alertSuccess = document.querySelector('.alert-success');
                if (!alertSuccess) {
                    return false;
                }
                alertSuccess.style.display = 'none';
            }, 1500);
        });

    </script>

    {#<div id="results" style="color: red";></div>
    <div class="sb--travel-info">
        <div class="sb--column sb--container">
            <div class="sb--row sb--row-middle sb--travel-info__title">
                <div class="sb--row sb--row-justify">
                    <div class="sb--results-notification">
                        <span data-notification="{% if rows is defined %}{{ rows[0]['COUNT(*)'] }} results">{{ rows[0]['COUNT(*)'] }} results <br>{% endif %}</span>
                        {% if departOn is defined %}
                        {{ departOn }}
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>


    {% if results is defined %}
        {% for searchResult in results %}
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>Depart from</th>
                        <th>Travel to</th>
                        <th>Departure time</th>
                        <th>Arrival time</th>
                        <th><i class="fa fa-clock-o" aria-hidden="true"></i></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>{{ searchResult.departFrom }}</td>
                        <td>{{ searchResult.travelTo }}</td>
                        <td>{{ searchResult.departureTime|date('H:i') }}h</td>
                        <td>{{ searchResult.timeOfArrival|date('H:i') }}h</td>
                        <td>{{ searchResult.estimatedArrivalTime|date('H:i') }}h</td>
                        <td>{{ searchResult.busCompany.getName }}</td>
                        <td><a class="cart-select" href="{{ path('app_cart_addtocart', {id: searchResult.id}) }}">Select</a></td>
                    </tr>
                </tbody>
            </table>
        {% endfor %}

    {% endif %}#}

{% endblock %}